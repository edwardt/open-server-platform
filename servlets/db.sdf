<?xml version="1.0"?>
<!DOCTYPE osp-servlet PUBLIC "-//Jacob Torrey//Open Server Platform Servlet//EN" "http://www.openserverplatform.com/osp-servlet.dtd">
<osp-servlet>
  <author>Jacob Ian Torrey</author>
  <name>db</name>
  <version>0.1</version>
  <proto>tcp</proto>
  <code>
  <init><![CDATA[
  init() ->
    io:format("~p is starting!~n", [?MODULE]).
  ]]></init>
  <server><![CDATA[
  server(Sock) ->
    ReqBin = recv(Sock, 0),
    Req = erlang:binary_to_list(ReqBin),
    Req1 = string:strip(Req, right, $\n),
    Req2 = string:strip(Req1, right, $\r),
    Comm = string:tokens(Req2, " "),
    case lists:nth(1, Comm) of
	"set" ->
		case length(Comm) of
			3 ->
				Var = erlang:list_to_atom(lists:nth(2, Comm)),
				Val = lists:last(Comm),
				store(Var, Val),
				sendf(Sock, "Wrote ~p ~p~n", [Var, Val]),
				close(Sock);
			_ ->
				send(Sock, "ERROR\n"),
				close(Sock)
		end;
	"get" ->
		case length(Comm) of
			2 ->
				Var = erlang:list_to_atom(lists:last(Comm)),
				sendf(Sock, "~p~n", [retrieve(Var)]),
				close(Sock);
			_ ->
				send(Sock, "ERROR\n"),
				close(Sock)
		end;
	_ ->
		send(Sock, "ERROR\n"),
		close(Sock)
    end.    
  ]]></server>
  <cleanup><![CDATA[
  cleanup() ->
    io:format("~p is stopping!~n", [?MODULE]).
  ]]></cleanup>
  </code>
</osp-servlet>
